<!ELEMENT primary_expr (identifier)>
<!ELEMENT primary_expr (CONSTANT)>
<!ELEMENT primary_expr (STRING_LITERAL)>
<!ELEMENT primary_expr (PUNCT_LPAR,expr,PUNCT_RPAR)>
<!ELEMENT postfix_expr (primary_expr)>
<!ELEMENT postfix_expr (postfix_expr,PUNCT_LBRACKET,expr,PUNCT_RBRACKET)>
<!ELEMENT postfix_expr (postfix_expr,PUNCT_LPAR,PUNCT_RPAR)>
<!ELEMENT postfix_expr (postfix_expr,PUNCT_LPAR,argument_expr_list,PUNCT_RPAR)>
<!ELEMENT postfix_expr (postfix_expr,PUNCT_DOT,identifier)>
<!ELEMENT postfix_expr (postfix_expr,PTR_OP,identifier)>
<!ELEMENT postfix_expr (postfix_expr,INC_OP)>
<!ELEMENT postfix_expr (postfix_expr,DEC_OP)>
<!ELEMENT argument_expr_list (assignment_expr)>
<!ELEMENT argument_expr_list (argument_expr_list,PUNCT_COMMA,assignment_expr)>
<!ELEMENT unary_expr (postfix_expr)>
<!ELEMENT unary_expr (INC_OP,unary_expr)>
<!ELEMENT unary_expr (DEC_OP,unary_expr)>
<!ELEMENT unary_expr (unary_operator,cast_expr)>
<!ELEMENT unary_expr (SIZEOF,unary_expr)>
<!ELEMENT unary_expr (SIZEOF,PUNCT_LPAR,type_name,PUNCT_RPAR)>
<!ELEMENT unary_operator (PUNCT_AMBLE)>
<!ELEMENT unary_operator (PUNCT_STAR)>
<!ELEMENT unary_operator (PUNCT_PLUS)>
<!ELEMENT unary_operator (PUNCT_MINUS)>
<!ELEMENT unary_operator (PUNCT_TILDE)>
<!ELEMENT unary_operator (PUNCT_EXCLAIM)>
<!ELEMENT cast_expr (unary_expr)>
<!ELEMENT cast_expr (PUNCT_LPAR,type_name,PUNCT_RPAR,cast_expr)>
<!ELEMENT multiplicative_expr (cast_expr)>
<!ELEMENT multiplicative_expr (multiplicative_expr,PUNCT_STAR,cast_expr)>
<!ELEMENT multiplicative_expr (multiplicative_expr,PUNCT_DIV,cast_expr)>
<!ELEMENT multiplicative_expr (multiplicative_expr,PUNCT_PERCENT,cast_expr)>
<!ELEMENT additive_expr (multiplicative_expr)>
<!ELEMENT additive_expr (additive_expr,PUNCT_PLUS,multiplicative_expr)>
<!ELEMENT additive_expr (additive_expr,PUNCT_MINUS,multiplicative_expr)>
<!ELEMENT shift_expr (additive_expr)>
<!ELEMENT shift_expr (shift_expr,LEFT_OP,additive_expr)>
<!ELEMENT shift_expr (shift_expr,RIGHT_OP,additive_expr)>
<!ELEMENT relational_expr (shift_expr)>
<!ELEMENT relational_expr (relational_expr,PUNCT_LT,shift_expr)>
<!ELEMENT relational_expr (relational_expr,PUNCT_GT,shift_expr)>
<!ELEMENT relational_expr (relational_expr,LE_OP,shift_expr)>
<!ELEMENT relational_expr (relational_expr,GE_OP,shift_expr)>
<!ELEMENT equality_expr (relational_expr)>
<!ELEMENT equality_expr (equality_expr,EQ_OP,relational_expr)>
<!ELEMENT equality_expr (equality_expr,NE_OP,relational_expr)>
<!ELEMENT and_expr (equality_expr)>
<!ELEMENT and_expr (and_expr,PUNCT_AMBLE,equality_expr)>
<!ELEMENT exclusive_or_expr (and_expr)>
<!ELEMENT exclusive_or_expr (exclusive_or_expr,PUNCT_CARET,and_expr)>
<!ELEMENT inclusive_or_expr (exclusive_or_expr)>
<!ELEMENT inclusive_or_expr (inclusive_or_expr,PUNCT_OR,exclusive_or_expr)>
<!ELEMENT logical_and_expr (inclusive_or_expr)>
<!ELEMENT logical_and_expr (logical_and_expr,AND_OP,inclusive_or_expr)>
<!ELEMENT logical_or_expr (logical_and_expr)>
<!ELEMENT logical_or_expr (logical_or_expr,OR_OP,logical_and_expr)>
<!ELEMENT conditional_expr (logical_or_expr)>
<!ELEMENT conditional_expr (logical_or_expr,PUNCT_QUESTION,logical_or_expr,PUNCT_COLON,conditional_expr)>
<!ELEMENT assignment_expr (conditional_expr)>
<!ELEMENT assignment_expr (unary_expr,assignment_operator,assignment_expr)>
<!ELEMENT assignment_operator (PUNCT_EQUAL)>
<!ELEMENT assignment_operator (MUL_ASSIGN)>
<!ELEMENT assignment_operator (DIV_ASSIGN)>
<!ELEMENT assignment_operator (MOD_ASSIGN)>
<!ELEMENT assignment_operator (ADD_ASSIGN)>
<!ELEMENT assignment_operator (SUB_ASSIGN)>
<!ELEMENT assignment_operator (LEFT_ASSIGN)>
<!ELEMENT assignment_operator (RIGHT_ASSIGN)>
<!ELEMENT assignment_operator (AND_ASSIGN)>
<!ELEMENT assignment_operator (XOR_ASSIGN)>
<!ELEMENT assignment_operator (OR_ASSIGN)>
<!ELEMENT expr (assignment_expr)>
<!ELEMENT expr (expr,PUNCT_COMMA,assignment_expr)>
<!ELEMENT constant_expr (conditional_expr)>
<!ELEMENT declaration (declaration_specifiers,PUNCT_SEMICOLON)>
<!ELEMENT declaration (declaration_specifiers,init_declarator_list,PUNCT_SEMICOLON)>
<!ELEMENT declaration_specifiers (storage_class_specifier)>
<!ELEMENT declaration_specifiers (storage_class_specifier,declaration_specifiers)>
<!ELEMENT declaration_specifiers (type_specifier)>
<!ELEMENT declaration_specifiers (type_specifier,declaration_specifiers)>
<!ELEMENT init_declarator_list (init_declarator)>
<!ELEMENT init_declarator_list (init_declarator_list,PUNCT_COMMA,init_declarator)>
<!ELEMENT init_declarator (declarator)>
<!ELEMENT init_declarator (declarator,PUNCT_EQUAL,initializer)>
<!ELEMENT storage_class_specifier (TYPEDEF)>
<!ELEMENT storage_class_specifier (EXTERN)>
<!ELEMENT storage_class_specifier (STATIC)>
<!ELEMENT storage_class_specifier (AUTO)>
<!ELEMENT storage_class_specifier (REGISTER)>
<!ELEMENT type_specifier (CHAR)>
<!ELEMENT type_specifier (SHORT)>
<!ELEMENT type_specifier (INT)>
<!ELEMENT type_specifier (LONG)>
<!ELEMENT type_specifier (SIGNED)>
<!ELEMENT type_specifier (UNSIGNED)>
<!ELEMENT type_specifier (FLOAT)>
<!ELEMENT type_specifier (DOUBLE)>
<!ELEMENT type_specifier (CONST)>
<!ELEMENT type_specifier (VOLATILE)>
<!ELEMENT type_specifier (VOID)>
<!ELEMENT type_specifier (struct_or_union_specifier)>
<!ELEMENT type_specifier (enum_specifier)>
<!ELEMENT type_specifier (TYPE_NAME)>
<!ELEMENT struct_or_union_specifier (struct_or_union,identifier,PUNCT_LBRACE,struct_declaration_list,PUNCT_RBRACE)>
<!ELEMENT struct_or_union_specifier (struct_or_union,PUNCT_LBRACE,struct_declaration_list,PUNCT_RBRACE)>
<!ELEMENT struct_or_union_specifier (struct_or_union,identifier)>
<!ELEMENT struct_or_union (STRUCT)>
<!ELEMENT struct_or_union (UNION)>
<!ELEMENT struct_declaration_list (struct_declaration)>
<!ELEMENT struct_declaration_list (struct_declaration_list,struct_declaration)>
<!ELEMENT struct_declaration (type_specifier_list,struct_declarator_list,PUNCT_SEMICOLON)>
<!ELEMENT struct_declarator_list (struct_declarator)>
<!ELEMENT struct_declarator_list (struct_declarator_list,PUNCT_COMMA,struct_declarator)>
<!ELEMENT struct_declarator (declarator)>
<!ELEMENT struct_declarator (PUNCT_COLON,constant_expr)>
<!ELEMENT struct_declarator (declarator,PUNCT_COLON,constant_expr)>
<!ELEMENT enum_specifier (ENUM,PUNCT_LBRACE,enumerator_list,PUNCT_RBRACE)>
<!ELEMENT enum_specifier (ENUM,identifier,PUNCT_LBRACE,enumerator_list,PUNCT_RBRACE)>
<!ELEMENT enum_specifier (ENUM,identifier)>
<!ELEMENT enumerator_list (enumerator)>
<!ELEMENT enumerator_list (enumerator_list,PUNCT_COMMA,enumerator)>
<!ELEMENT enumerator (identifier)>
<!ELEMENT enumerator (identifier,PUNCT_EQUAL,constant_expr)>
<!ELEMENT declarator (declarator2)>
<!ELEMENT declarator (pointer,declarator2)>
<!ELEMENT declarator2 (identifier)>
<!ELEMENT declarator2 (PUNCT_LPAR,declarator,PUNCT_RPAR)>
<!ELEMENT declarator2 (declarator2,PUNCT_LBRACKET,PUNCT_RBRACKET)>
<!ELEMENT declarator2 (declarator2,PUNCT_LBRACKET,constant_expr,PUNCT_RBRACKET)>
<!ELEMENT declarator2 (declarator2,PUNCT_LPAR,PUNCT_RPAR)>
<!ELEMENT declarator2 (declarator2,PUNCT_LPAR,parameter_type_list,PUNCT_RPAR)>
<!ELEMENT declarator2 (declarator2,PUNCT_LPAR,parameter_identifier_list,PUNCT_RPAR)>
<!ELEMENT pointer (PUNCT_STAR)>
<!ELEMENT pointer (PUNCT_STAR,type_specifier_list)>
<!ELEMENT pointer (PUNCT_STAR,pointer)>
<!ELEMENT pointer (PUNCT_STAR,type_specifier_list,pointer)>
<!ELEMENT type_specifier_list (type_specifier)>
<!ELEMENT type_specifier_list (type_specifier_list,type_specifier)>
<!ELEMENT parameter_identifier_list (identifier_list)>
<!ELEMENT parameter_identifier_list (identifier_list,PUNCT_COMMA,ELIPSIS)>
<!ELEMENT identifier_list (identifier)>
<!ELEMENT identifier_list (identifier_list,PUNCT_COMMA,identifier)>
<!ELEMENT parameter_type_list (parameter_list)>
<!ELEMENT parameter_type_list (parameter_list,PUNCT_COMMA,ELIPSIS)>
<!ELEMENT parameter_list (parameter_declaration)>
<!ELEMENT parameter_list (parameter_list,PUNCT_COMMA,parameter_declaration)>
<!ELEMENT parameter_declaration (type_specifier_list,declarator)>
<!ELEMENT parameter_declaration (type_name)>
<!ELEMENT type_name (type_specifier_list)>
<!ELEMENT type_name (type_specifier_list,abstract_declarator)>
<!ELEMENT abstract_declarator (pointer)>
<!ELEMENT abstract_declarator (abstract_declarator2)>
<!ELEMENT abstract_declarator (pointer,abstract_declarator2)>
<!ELEMENT abstract_declarator2 (PUNCT_LPAR,abstract_declarator,PUNCT_RPAR)>
<!ELEMENT abstract_declarator2 (PUNCT_LBRACKET,PUNCT_RBRACKET)>
<!ELEMENT abstract_declarator2 (PUNCT_LBRACKET,constant_expr,PUNCT_RBRACKET)>
<!ELEMENT abstract_declarator2 (abstract_declarator2,PUNCT_LBRACKET,PUNCT_RBRACKET)>
<!ELEMENT abstract_declarator2 (abstract_declarator2,PUNCT_LBRACKET,constant_expr,PUNCT_RBRACKET)>
<!ELEMENT abstract_declarator2 (PUNCT_LPAR,PUNCT_RPAR)>
<!ELEMENT abstract_declarator2 (PUNCT_LPAR,parameter_type_list,PUNCT_RPAR)>
<!ELEMENT abstract_declarator2 (abstract_declarator2,PUNCT_LPAR,PUNCT_RPAR)>
<!ELEMENT abstract_declarator2 (abstract_declarator2,PUNCT_LPAR,parameter_type_list,PUNCT_RPAR)>
<!ELEMENT initializer (assignment_expr)>
<!ELEMENT initializer (PUNCT_LBRACE,initializer_list,PUNCT_RBRACE)>
<!ELEMENT initializer (PUNCT_LBRACE,initializer_list,PUNCT_COMMA,PUNCT_RBRACE)>
<!ELEMENT initializer_list (initializer)>
<!ELEMENT initializer_list (initializer_list,PUNCT_COMMA,initializer)>
<!ELEMENT statement (labeled_statement)>
<!ELEMENT statement (compound_statement)>
<!ELEMENT statement (expression_statement)>
<!ELEMENT statement (selection_statement)>
<!ELEMENT statement (iteration_statement)>
<!ELEMENT statement (jump_statement)>
<!ELEMENT labeled_statement (identifier,PUNCT_COLON,statement)>
<!ELEMENT labeled_statement (CASE,constant_expr,PUNCT_COLON,statement)>
<!ELEMENT labeled_statement (DEFAULT,PUNCT_COLON,statement)>
<!ELEMENT compound_statement (PUNCT_LBRACE,PUNCT_RBRACE)>
<!ELEMENT compound_statement (PUNCT_LBRACE,statement_list,PUNCT_RBRACE)>
<!ELEMENT compound_statement (PUNCT_LBRACE,declaration_list,PUNCT_RBRACE)>
<!ELEMENT compound_statement (PUNCT_LBRACE,declaration_list,statement_list,PUNCT_RBRACE)>
<!ELEMENT declaration_list (declaration)>
<!ELEMENT declaration_list (declaration_list,declaration)>
<!ELEMENT statement_list (statement)>
<!ELEMENT statement_list (statement_list,statement)>
<!ELEMENT expression_statement (PUNCT_SEMICOLON)>
<!ELEMENT expression_statement (expr,PUNCT_SEMICOLON)>
<!ELEMENT selection_statement (IF,PUNCT_LPAR,expr,PUNCT_RPAR,statement)>
<!ELEMENT selection_statement (IF,PUNCT_LPAR,expr,PUNCT_RPAR,statement,ELSE,statement)>
<!ELEMENT selection_statement (SWITCH,PUNCT_LPAR,expr,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (WHILE,PUNCT_LPAR,expr,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (DO,statement,WHILE,PUNCT_LPAR,expr,PUNCT_RPAR,PUNCT_SEMICOLON)>
<!ELEMENT iteration_statement (FOR,PUNCT_LPAR,PUNCT_SEMICOLON,PUNCT_SEMICOLON,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (FOR,PUNCT_LPAR,PUNCT_SEMICOLON,PUNCT_SEMICOLON,expr,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (FOR,PUNCT_LPAR,PUNCT_SEMICOLON,expr,PUNCT_SEMICOLON,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (FOR,PUNCT_LPAR,PUNCT_SEMICOLON,expr,PUNCT_SEMICOLON,expr,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (FOR,PUNCT_LPAR,expr,PUNCT_SEMICOLON,PUNCT_SEMICOLON,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (FOR,PUNCT_LPAR,expr,PUNCT_SEMICOLON,PUNCT_SEMICOLON,expr,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (FOR,PUNCT_LPAR,expr,PUNCT_SEMICOLON,expr,PUNCT_SEMICOLON,PUNCT_RPAR,statement)>
<!ELEMENT iteration_statement (FOR,PUNCT_LPAR,expr,PUNCT_SEMICOLON,expr,PUNCT_SEMICOLON,expr,PUNCT_RPAR,statement)>
<!ELEMENT jump_statement (GOTO,identifier,PUNCT_SEMICOLON)>
<!ELEMENT jump_statement (CONTINUE,PUNCT_SEMICOLON)>
<!ELEMENT jump_statement (BREAK,PUNCT_SEMICOLON)>
<!ELEMENT jump_statement (RETURN,PUNCT_SEMICOLON)>
<!ELEMENT jump_statement (RETURN,expr,PUNCT_SEMICOLON)>
<!ELEMENT file (external_definition)>
<!ELEMENT file (file,external_definition)>
<!ELEMENT external_definition (function_definition)>
<!ELEMENT external_definition (declaration)>
<!ELEMENT function_definition (declarator,function_body)>
<!ELEMENT function_definition (declaration_specifiers,declarator,function_body)>
<!ELEMENT function_body (compound_statement)>
<!ELEMENT function_body (declaration_list,compound_statement)>
<!ELEMENT identifier (IDENTIFIER)>
<!ELEMENT IDENTIFIER (#PCDATA)>
<!ELEMENT CONSTANT (#PCDATA)>
<!ELEMENT STRING_LITERAL (#PCDATA)>
<!ELEMENT SIZEOF (#PCDATA)>
<!ELEMENT PTR_OP (#PCDATA)>
<!ELEMENT INC_OP (#PCDATA)>
<!ELEMENT DEC_OP (#PCDATA)>
<!ELEMENT LEFT_OP (#PCDATA)>
<!ELEMENT RIGHT_OP (#PCDATA)>
<!ELEMENT LE_OP (#PCDATA)>
<!ELEMENT GE_OP (#PCDATA)>
<!ELEMENT EQ_OP (#PCDATA)>
<!ELEMENT NE_OP (#PCDATA)>
<!ELEMENT AND_OP (#PCDATA)>
<!ELEMENT OR_OP (#PCDATA)>
<!ELEMENT MUL_ASSIGN (#PCDATA)>
<!ELEMENT DIV_ASSIGN (#PCDATA)>
<!ELEMENT MOD_ASSIGN (#PCDATA)>
<!ELEMENT ADD_ASSIGN (#PCDATA)>
<!ELEMENT SUB_ASSIGN (#PCDATA)>
<!ELEMENT LEFT_ASSIGN (#PCDATA)>
<!ELEMENT RIGHT_ASSIGN (#PCDATA)>
<!ELEMENT AND_ASSIGN (#PCDATA)>
<!ELEMENT XOR_ASSIGN (#PCDATA)>
<!ELEMENT OR_ASSIGN (#PCDATA)>
<!ELEMENT TYPE_NAME (#PCDATA)>
<!ELEMENT TYPEDEF (#PCDATA)>
<!ELEMENT EXTERN (#PCDATA)>
<!ELEMENT STATIC (#PCDATA)>
<!ELEMENT AUTO (#PCDATA)>
<!ELEMENT REGISTER (#PCDATA)>
<!ELEMENT CHAR (#PCDATA)>
<!ELEMENT SHORT (#PCDATA)>
<!ELEMENT INT (#PCDATA)>
<!ELEMENT LONG (#PCDATA)>
<!ELEMENT SIGNED (#PCDATA)>
<!ELEMENT UNSIGNED (#PCDATA)>
<!ELEMENT FLOAT (#PCDATA)>
<!ELEMENT DOUBLE (#PCDATA)>
<!ELEMENT CONST (#PCDATA)>
<!ELEMENT VOLATILE (#PCDATA)>
<!ELEMENT VOID (#PCDATA)>
<!ELEMENT STRUCT (#PCDATA)>
<!ELEMENT UNION (#PCDATA)>
<!ELEMENT ENUM (#PCDATA)>
<!ELEMENT ELIPSIS (#PCDATA)>
<!ELEMENT RANGE (#PCDATA)>
<!ELEMENT CASE (#PCDATA)>
<!ELEMENT DEFAULT (#PCDATA)>
<!ELEMENT IF (#PCDATA)>
<!ELEMENT ELSE (#PCDATA)>
<!ELEMENT SWITCH (#PCDATA)>
<!ELEMENT WHILE (#PCDATA)>
<!ELEMENT DO (#PCDATA)>
<!ELEMENT FOR (#PCDATA)>
<!ELEMENT GOTO (#PCDATA)>
<!ELEMENT CONTINUE (#PCDATA)>
<!ELEMENT BREAK (#PCDATA)>
<!ELEMENT RETURN (#PCDATA)>
<!ELEMENT PUNCT_COLON (#PCDATA)>
<!ELEMENT PUNCT_SEMICOLON (#PCDATA)>
<!ELEMENT PUNCT_COMMA (#PCDATA)>
<!ELEMENT PUNCT_DOT (#PCDATA)>
<!ELEMENT PUNCT_EQUAL (#PCDATA)>
<!ELEMENT PUNCT_AMBLE (#PCDATA)>
<!ELEMENT PUNCT_STAR (#PCDATA)>
<!ELEMENT PUNCT_PLUS (#PCDATA)>
<!ELEMENT PUNCT_MINUS (#PCDATA)>
<!ELEMENT PUNCT_TILDE (#PCDATA)>
<!ELEMENT PUNCT_EXCLAIM (#PCDATA)>
<!ELEMENT PUNCT_QUESTION (#PCDATA)>
<!ELEMENT PUNCT_OR (#PCDATA)>
<!ELEMENT PUNCT_DIV (#PCDATA)>
<!ELEMENT PUNCT_PERCENT (#PCDATA)>
<!ELEMENT PUNCT_LT (#PCDATA)>
<!ELEMENT PUNCT_GT (#PCDATA)>
<!ELEMENT PUNCT_CARET (#PCDATA)>
<!ELEMENT PUNCT_LPAR (#PCDATA)>
<!ELEMENT PUNCT_RPAR (#PCDATA)>
<!ELEMENT PUNCT_LBRACKET (#PCDATA)>
<!ELEMENT PUNCT_RBRACKET (#PCDATA)>
<!ELEMENT PUNCT_LBRACE (#PCDATA)>
<!ELEMENT PUNCT_RBRACE (#PCDATA)>
