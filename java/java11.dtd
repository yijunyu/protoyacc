<!ELEMENT TypeSpecifier (TypeName)>
<!ELEMENT TypeSpecifier (TypeName,Dims)>
<!ELEMENT TypeName (PrimitiveType)>
<!ELEMENT TypeName (QualifiedName)>
<!ELEMENT ClassNameList (QualifiedName)>
<!ELEMENT ClassNameList (ClassNameList,CHAR44,QualifiedName)>
<!ELEMENT PrimitiveType (BOOLEAN)>
<!ELEMENT PrimitiveType (CHAR)>
<!ELEMENT PrimitiveType (BYTE)>
<!ELEMENT PrimitiveType (SHORT)>
<!ELEMENT PrimitiveType (INT)>
<!ELEMENT PrimitiveType (LONG)>
<!ELEMENT PrimitiveType (FLOAT)>
<!ELEMENT PrimitiveType (DOUBLE)>
<!ELEMENT PrimitiveType (VOID)>
<!ELEMENT SemiColons (CHAR59)>
<!ELEMENT SemiColons (SemiColons,CHAR59)>
<!ELEMENT CompilationUnit (ProgramFile)>
<!ELEMENT ProgramFile (PackageStatement,ImportStatements,TypeDeclarations)>
<!ELEMENT ProgramFile (PackageStatement,ImportStatements)>
<!ELEMENT ProgramFile (PackageStatement,TypeDeclarations)>
<!ELEMENT ProgramFile (ImportStatements,TypeDeclarations)>
<!ELEMENT ProgramFile (PackageStatement)>
<!ELEMENT ProgramFile (ImportStatements)>
<!ELEMENT ProgramFile (TypeDeclarations)>
<!ELEMENT PackageStatement (PACKAGE,QualifiedName,SemiColons)>
<!ELEMENT TypeDeclarations (TypeDeclarationOptSemi)>
<!ELEMENT TypeDeclarations (TypeDeclarations,TypeDeclarationOptSemi)>
<!ELEMENT TypeDeclarationOptSemi (TypeDeclaration)>
<!ELEMENT TypeDeclarationOptSemi (TypeDeclaration,SemiColons)>
<!ELEMENT ImportStatements (ImportStatement)>
<!ELEMENT ImportStatements (ImportStatements,ImportStatement)>
<!ELEMENT ImportStatement (IMPORT,QualifiedName,SemiColons)>
<!ELEMENT ImportStatement (IMPORT,QualifiedName,CHAR46,CHAR42,SemiColons)>
<!ELEMENT QualifiedName (IDENTIFIER)>
<!ELEMENT QualifiedName (QualifiedName,CHAR46,IDENTIFIER)>
<!ELEMENT TypeDeclaration (ClassHeader,CHAR123,FieldDeclarations,CHAR125)>
<!ELEMENT TypeDeclaration (ClassHeader,CHAR123,CHAR125)>
<!ELEMENT ClassHeader (Modifiers,ClassWord,IDENTIFIER,Extends,Interfaces)>
<!ELEMENT ClassHeader (Modifiers,ClassWord,IDENTIFIER,Extends)>
<!ELEMENT ClassHeader (Modifiers,ClassWord,IDENTIFIER,Interfaces)>
<!ELEMENT ClassHeader (ClassWord,IDENTIFIER,Extends,Interfaces)>
<!ELEMENT ClassHeader (Modifiers,ClassWord,IDENTIFIER)>
<!ELEMENT ClassHeader (ClassWord,IDENTIFIER,Extends)>
<!ELEMENT ClassHeader (ClassWord,IDENTIFIER,Interfaces)>
<!ELEMENT ClassHeader (ClassWord,IDENTIFIER)>
<!ELEMENT Modifiers (Modifier)>
<!ELEMENT Modifiers (Modifiers,Modifier)>
<!ELEMENT Modifier (ABSTRACT)>
<!ELEMENT Modifier (FINAL)>
<!ELEMENT Modifier (PUBLIC)>
<!ELEMENT Modifier (PROTECTED)>
<!ELEMENT Modifier (PRIVATE)>
<!ELEMENT Modifier (STATIC)>
<!ELEMENT Modifier (TRANSIENT)>
<!ELEMENT Modifier (VOLATILE)>
<!ELEMENT Modifier (NATIVE)>
<!ELEMENT Modifier (SYNCHRONIZED)>
<!ELEMENT ClassWord (CLASS)>
<!ELEMENT ClassWord (INTERFACE)>
<!ELEMENT Interfaces (IMPLEMENTS,ClassNameList)>
<!ELEMENT FieldDeclarations (FieldDeclarationOptSemi)>
<!ELEMENT FieldDeclarations (FieldDeclarations,FieldDeclarationOptSemi)>
<!ELEMENT FieldDeclarationOptSemi (FieldDeclaration)>
<!ELEMENT FieldDeclarationOptSemi (FieldDeclaration,SemiColons)>
<!ELEMENT FieldDeclaration (FieldVariableDeclaration,CHAR59)>
<!ELEMENT FieldDeclaration (MethodDeclaration)>
<!ELEMENT FieldDeclaration (ConstructorDeclaration)>
<!ELEMENT FieldDeclaration (StaticInitializer)>
<!ELEMENT FieldDeclaration (NonStaticInitializer)>
<!ELEMENT FieldDeclaration (TypeDeclaration)>
<!ELEMENT FieldVariableDeclaration (Modifiers,TypeSpecifier,VariableDeclarators)>
<!ELEMENT FieldVariableDeclaration (TypeSpecifier,VariableDeclarators)>
<!ELEMENT VariableDeclarators (VariableDeclarator)>
<!ELEMENT VariableDeclarators (VariableDeclarators,CHAR44,VariableDeclarator)>
<!ELEMENT VariableDeclarator (DeclaratorName)>
<!ELEMENT VariableDeclarator (DeclaratorName,CHAR61,VariableInitializer)>
<!ELEMENT VariableInitializer (Expression)>
<!ELEMENT VariableInitializer (CHAR123,CHAR125)>
<!ELEMENT VariableInitializer (CHAR123,ArrayInitializers,CHAR125)>
<!ELEMENT ArrayInitializers (VariableInitializer)>
<!ELEMENT ArrayInitializers (ArrayInitializers,CHAR44,VariableInitializer)>
<!ELEMENT ArrayInitializers (ArrayInitializers,CHAR44)>
<!ELEMENT MethodDeclaration (Modifiers,TypeSpecifier,MethodDeclarator,Throws,MethodBody)>
<!ELEMENT MethodDeclaration (Modifiers,TypeSpecifier,MethodDeclarator,MethodBody)>
<!ELEMENT MethodDeclaration (TypeSpecifier,MethodDeclarator,Throws,MethodBody)>
<!ELEMENT MethodDeclaration (TypeSpecifier,MethodDeclarator,MethodBody)>
<!ELEMENT MethodDeclarator (DeclaratorName,CHAR40,ParameterList,CHAR41)>
<!ELEMENT MethodDeclarator (DeclaratorName,CHAR40,CHAR41)>
<!ELEMENT MethodDeclarator (MethodDeclarator,OP_DIM)>
<!ELEMENT ParameterList (Parameter)>
<!ELEMENT ParameterList (ParameterList,CHAR44,Parameter)>
<!ELEMENT Parameter (TypeSpecifier,DeclaratorName)>
<!ELEMENT Parameter (FINAL,TypeSpecifier,DeclaratorName)>
<!ELEMENT DeclaratorName (IDENTIFIER)>
<!ELEMENT DeclaratorName (DeclaratorName,OP_DIM)>
<!ELEMENT Throws (THROWS,ClassNameList)>
<!ELEMENT MethodBody (Block)>
<!ELEMENT MethodBody (CHAR59)>
<!ELEMENT ConstructorDeclaration (Modifiers,ConstructorDeclarator,Throws,Block)>
<!ELEMENT ConstructorDeclaration (Modifiers,ConstructorDeclarator,Block)>
<!ELEMENT ConstructorDeclaration (ConstructorDeclarator,Throws,Block)>
<!ELEMENT ConstructorDeclaration (ConstructorDeclarator,Block)>
<!ELEMENT ConstructorDeclarator (IDENTIFIER,CHAR40,ParameterList,CHAR41)>
<!ELEMENT ConstructorDeclarator (IDENTIFIER,CHAR40,CHAR41)>
<!ELEMENT StaticInitializer (STATIC,Block)>
<!ELEMENT NonStaticInitializer (Block)>
<!ELEMENT Extends (EXTENDS,TypeName)>
<!ELEMENT Extends (Extends,CHAR44,TypeName)>
<!ELEMENT Block (CHAR123,LocalVariableDeclarationsAndStatements,CHAR125)>
<!ELEMENT Block (CHAR123,CHAR125)>
<!ELEMENT LocalVariableDeclarationsAndStatements (LocalVariableDeclarationOrStatement)>
<!ELEMENT LocalVariableDeclarationsAndStatements (LocalVariableDeclarationsAndStatements,LocalVariableDeclarationOrStatement)>
<!ELEMENT LocalVariableDeclarationOrStatement (LocalVariableDeclarationStatement)>
<!ELEMENT LocalVariableDeclarationOrStatement (Statement)>
<!ELEMENT LocalVariableDeclarationStatement (TypeSpecifier,VariableDeclarators,CHAR59)>
<!ELEMENT LocalVariableDeclarationStatement (FINAL,TypeSpecifier,VariableDeclarators,CHAR59)>
<!ELEMENT Statement (EmptyStatement)>
<!ELEMENT Statement (LabelStatement)>
<!ELEMENT Statement (ExpressionStatement,CHAR59)>
<!ELEMENT Statement (SelectionStatement)>
<!ELEMENT Statement (IterationStatement)>
<!ELEMENT Statement (JumpStatement)>
<!ELEMENT Statement (GuardingStatement)>
<!ELEMENT Statement (Block)>
<!ELEMENT EmptyStatement (CHAR59)>
<!ELEMENT LabelStatement (IDENTIFIER,CHAR58)>
<!ELEMENT LabelStatement (CASE,ConstantExpression,CHAR58)>
<!ELEMENT LabelStatement (DEFAULT,CHAR58)>
<!ELEMENT ExpressionStatement (Expression)>
<!ELEMENT SelectionStatement (IF,CHAR40,Expression,CHAR41,Statement)>
<!ELEMENT SelectionStatement (IF,CHAR40,Expression,CHAR41,Statement,ELSE,Statement)>
<!ELEMENT SelectionStatement (SWITCH,CHAR40,Expression,CHAR41,Block)>
<!ELEMENT IterationStatement (WHILE,CHAR40,Expression,CHAR41,Statement)>
<!ELEMENT IterationStatement (DO,Statement,WHILE,CHAR40,Expression,CHAR41,CHAR59)>
<!ELEMENT IterationStatement (FOR,CHAR40,ForInit,ForExpr,ForIncr,CHAR41,Statement)>
<!ELEMENT IterationStatement (FOR,CHAR40,ForInit,ForExpr,CHAR41,Statement)>
<!ELEMENT ForInit (ExpressionStatements,CHAR59)>
<!ELEMENT ForInit (LocalVariableDeclarationStatement)>
<!ELEMENT ForInit (CHAR59)>
<!ELEMENT ForExpr (Expression,CHAR59)>
<!ELEMENT ForExpr (CHAR59)>
<!ELEMENT ForIncr (ExpressionStatements)>
<!ELEMENT ExpressionStatements (ExpressionStatement)>
<!ELEMENT ExpressionStatements (ExpressionStatements,CHAR44,ExpressionStatement)>
<!ELEMENT JumpStatement (BREAK,IDENTIFIER,CHAR59)>
<!ELEMENT JumpStatement (BREAK,CHAR59)>
<!ELEMENT JumpStatement (CONTINUE,IDENTIFIER,CHAR59)>
<!ELEMENT JumpStatement (CONTINUE,CHAR59)>
<!ELEMENT JumpStatement (RETURN,Expression,CHAR59)>
<!ELEMENT JumpStatement (RETURN,CHAR59)>
<!ELEMENT JumpStatement (THROW,Expression,CHAR59)>
<!ELEMENT GuardingStatement (SYNCHRONIZED,CHAR40,Expression,CHAR41,Statement)>
<!ELEMENT GuardingStatement (TRY,Block,Finally)>
<!ELEMENT GuardingStatement (TRY,Block,Catches)>
<!ELEMENT GuardingStatement (TRY,Block,Catches,Finally)>
<!ELEMENT Catches (Catch)>
<!ELEMENT Catches (Catches,Catch)>
<!ELEMENT Catch (CatchHeader,Block)>
<!ELEMENT CatchHeader (CATCH,CHAR40,TypeSpecifier,IDENTIFIER,CHAR41)>
<!ELEMENT CatchHeader (CATCH,CHAR40,TypeSpecifier,CHAR41)>
<!ELEMENT Finally (FINALLY,Block)>
<!ELEMENT PrimaryExpression (QualifiedName)>
<!ELEMENT PrimaryExpression (NotJustName)>
<!ELEMENT NotJustName (SpecialName)>
<!ELEMENT NotJustName (NewAllocationExpression)>
<!ELEMENT NotJustName (ComplexPrimary)>
<!ELEMENT ComplexPrimary (CHAR40,Expression,CHAR41)>
<!ELEMENT ComplexPrimary (ComplexPrimaryNoParenthesis)>
<!ELEMENT ComplexPrimaryNoParenthesis (LITERAL)>
<!ELEMENT ComplexPrimaryNoParenthesis (BOOLLIT)>
<!ELEMENT ComplexPrimaryNoParenthesis (ArrayAccess)>
<!ELEMENT ComplexPrimaryNoParenthesis (FieldAccess)>
<!ELEMENT ComplexPrimaryNoParenthesis (MethodCall)>
<!ELEMENT ArrayAccess (QualifiedName,CHAR91,Expression,CHAR93)>
<!ELEMENT ArrayAccess (ComplexPrimary,CHAR91,Expression,CHAR93)>
<!ELEMENT FieldAccess (NotJustName,CHAR46,IDENTIFIER)>
<!ELEMENT FieldAccess (RealPostfixExpression,CHAR46,IDENTIFIER)>
<!ELEMENT FieldAccess (QualifiedName,CHAR46,THIS)>
<!ELEMENT FieldAccess (QualifiedName,CHAR46,CLASS)>
<!ELEMENT FieldAccess (PrimitiveType,CHAR46,CLASS)>
<!ELEMENT MethodCall (MethodAccess,CHAR40,ArgumentList,CHAR41)>
<!ELEMENT MethodCall (MethodAccess,CHAR40,CHAR41)>
<!ELEMENT MethodAccess (ComplexPrimaryNoParenthesis)>
<!ELEMENT MethodAccess (SpecialName)>
<!ELEMENT MethodAccess (QualifiedName)>
<!ELEMENT SpecialName (THIS)>
<!ELEMENT SpecialName (SUPER)>
<!ELEMENT SpecialName (JNULL)>
<!ELEMENT ArgumentList (Expression)>
<!ELEMENT ArgumentList (ArgumentList,CHAR44,Expression)>
<!ELEMENT NewAllocationExpression (PlainNewAllocationExpression)>
<!ELEMENT NewAllocationExpression (QualifiedName,CHAR46,PlainNewAllocationExpression)>
<!ELEMENT PlainNewAllocationExpression (ArrayAllocationExpression)>
<!ELEMENT PlainNewAllocationExpression (ClassAllocationExpression)>
<!ELEMENT PlainNewAllocationExpression (ArrayAllocationExpression,CHAR123,CHAR125)>
<!ELEMENT PlainNewAllocationExpression (ClassAllocationExpression,CHAR123,CHAR125)>
<!ELEMENT PlainNewAllocationExpression (ArrayAllocationExpression,CHAR123,ArrayInitializers,CHAR125)>
<!ELEMENT PlainNewAllocationExpression (ClassAllocationExpression,CHAR123,FieldDeclarations,CHAR125)>
<!ELEMENT ClassAllocationExpression (NEW,TypeName,CHAR40,ArgumentList,CHAR41)>
<!ELEMENT ClassAllocationExpression (NEW,TypeName,CHAR40,CHAR41)>
<!ELEMENT ArrayAllocationExpression (NEW,TypeName,DimExprs,Dims)>
<!ELEMENT ArrayAllocationExpression (NEW,TypeName,DimExprs)>
<!ELEMENT ArrayAllocationExpression (NEW,TypeName,Dims)>
<!ELEMENT DimExprs (DimExpr)>
<!ELEMENT DimExprs (DimExprs,DimExpr)>
<!ELEMENT DimExpr (CHAR91,Expression,CHAR93)>
<!ELEMENT Dims (OP_DIM)>
<!ELEMENT Dims (Dims,OP_DIM)>
<!ELEMENT PostfixExpression (PrimaryExpression)>
<!ELEMENT PostfixExpression (RealPostfixExpression)>
<!ELEMENT RealPostfixExpression (PostfixExpression,OP_INC)>
<!ELEMENT RealPostfixExpression (PostfixExpression,OP_DEC)>
<!ELEMENT UnaryExpression (OP_INC,UnaryExpression)>
<!ELEMENT UnaryExpression (OP_DEC,UnaryExpression)>
<!ELEMENT UnaryExpression (ArithmeticUnaryOperator,CastExpression)>
<!ELEMENT UnaryExpression (LogicalUnaryExpression)>
<!ELEMENT LogicalUnaryExpression (PostfixExpression)>
<!ELEMENT LogicalUnaryExpression (LogicalUnaryOperator,UnaryExpression)>
<!ELEMENT LogicalUnaryOperator (CHAR126)>
<!ELEMENT LogicalUnaryOperator (CHAR33)>
<!ELEMENT ArithmeticUnaryOperator (CHAR43)>
<!ELEMENT ArithmeticUnaryOperator (CHAR45)>
<!ELEMENT CastExpression (UnaryExpression)>
<!ELEMENT CastExpression (CHAR40,PrimitiveTypeExpression,CHAR41,CastExpression)>
<!ELEMENT CastExpression (CHAR40,ClassTypeExpression,CHAR41,CastExpression)>
<!ELEMENT CastExpression (CHAR40,Expression,CHAR41,LogicalUnaryExpression)>
<!ELEMENT PrimitiveTypeExpression (PrimitiveType)>
<!ELEMENT PrimitiveTypeExpression (PrimitiveType,Dims)>
<!ELEMENT ClassTypeExpression (QualifiedName,Dims)>
<!ELEMENT MultiplicativeExpression (CastExpression)>
<!ELEMENT MultiplicativeExpression (MultiplicativeExpression,CHAR42,CastExpression)>
<!ELEMENT MultiplicativeExpression (MultiplicativeExpression,CHAR47,CastExpression)>
<!ELEMENT MultiplicativeExpression (MultiplicativeExpression,CHAR37,CastExpression)>
<!ELEMENT AdditiveExpression (MultiplicativeExpression)>
<!ELEMENT AdditiveExpression (AdditiveExpression,CHAR43,MultiplicativeExpression)>
<!ELEMENT AdditiveExpression (AdditiveExpression,CHAR45,MultiplicativeExpression)>
<!ELEMENT ShiftExpression (AdditiveExpression)>
<!ELEMENT ShiftExpression (ShiftExpression,OP_SHL,AdditiveExpression)>
<!ELEMENT ShiftExpression (ShiftExpression,OP_SHR,AdditiveExpression)>
<!ELEMENT ShiftExpression (ShiftExpression,OP_SHRR,AdditiveExpression)>
<!ELEMENT RelationalExpression (ShiftExpression)>
<!ELEMENT RelationalExpression (RelationalExpression,CHAR60,ShiftExpression)>
<!ELEMENT RelationalExpression (RelationalExpression,CHAR62,ShiftExpression)>
<!ELEMENT RelationalExpression (RelationalExpression,OP_LE,ShiftExpression)>
<!ELEMENT RelationalExpression (RelationalExpression,OP_GE,ShiftExpression)>
<!ELEMENT RelationalExpression (RelationalExpression,INSTANCEOF,TypeSpecifier)>
<!ELEMENT EqualityExpression (RelationalExpression)>
<!ELEMENT EqualityExpression (EqualityExpression,OP_EQ,RelationalExpression)>
<!ELEMENT EqualityExpression (EqualityExpression,OP_NE,RelationalExpression)>
<!ELEMENT AndExpression (EqualityExpression)>
<!ELEMENT AndExpression (AndExpression,CHAR38,EqualityExpression)>
<!ELEMENT ExclusiveOrExpression (AndExpression)>
<!ELEMENT ExclusiveOrExpression (ExclusiveOrExpression,CHAR94,AndExpression)>
<!ELEMENT InclusiveOrExpression (ExclusiveOrExpression)>
<!ELEMENT InclusiveOrExpression (InclusiveOrExpression,CHAR124,ExclusiveOrExpression)>
<!ELEMENT ConditionalAndExpression (InclusiveOrExpression)>
<!ELEMENT ConditionalAndExpression (ConditionalAndExpression,OP_LAND,InclusiveOrExpression)>
<!ELEMENT ConditionalOrExpression (ConditionalAndExpression)>
<!ELEMENT ConditionalOrExpression (ConditionalOrExpression,OP_LOR,ConditionalAndExpression)>
<!ELEMENT ConditionalExpression (ConditionalOrExpression)>
<!ELEMENT ConditionalExpression (ConditionalOrExpression,CHAR63,Expression,CHAR58,ConditionalExpression)>
<!ELEMENT AssignmentExpression (ConditionalExpression)>
<!ELEMENT AssignmentExpression (UnaryExpression,AssignmentOperator,AssignmentExpression)>
<!ELEMENT AssignmentOperator (CHAR61)>
<!ELEMENT AssignmentOperator (ASS_MUL)>
<!ELEMENT AssignmentOperator (ASS_DIV)>
<!ELEMENT AssignmentOperator (ASS_MOD)>
<!ELEMENT AssignmentOperator (ASS_ADD)>
<!ELEMENT AssignmentOperator (ASS_SUB)>
<!ELEMENT AssignmentOperator (ASS_SHL)>
<!ELEMENT AssignmentOperator (ASS_SHR)>
<!ELEMENT AssignmentOperator (ASS_SHRR)>
<!ELEMENT AssignmentOperator (ASS_AND)>
<!ELEMENT AssignmentOperator (ASS_XOR)>
<!ELEMENT AssignmentOperator (ASS_OR)>
<!ELEMENT Expression (AssignmentExpression)>
<!ELEMENT ConstantExpression (ConditionalExpression)>
<!ELEMENT ABSTRACT (#PCDATA)>
<!ELEMENT BOOLEAN (#PCDATA)>
<!ELEMENT BREAK (#PCDATA)>
<!ELEMENT BYTE (#PCDATA)>
<!ELEMENT BYVALUE (#PCDATA)>
<!ELEMENT CASE (#PCDATA)>
<!ELEMENT CAST (#PCDATA)>
<!ELEMENT CATCH (#PCDATA)>
<!ELEMENT CHAR (#PCDATA)>
<!ELEMENT CLASS (#PCDATA)>
<!ELEMENT CONST (#PCDATA)>
<!ELEMENT CONTINUE (#PCDATA)>
<!ELEMENT DEFAULT (#PCDATA)>
<!ELEMENT DO (#PCDATA)>
<!ELEMENT DOUBLE (#PCDATA)>
<!ELEMENT ELSE (#PCDATA)>
<!ELEMENT EXTENDS (#PCDATA)>
<!ELEMENT FINAL (#PCDATA)>
<!ELEMENT FINALLY (#PCDATA)>
<!ELEMENT FLOAT (#PCDATA)>
<!ELEMENT FOR (#PCDATA)>
<!ELEMENT FUTURE (#PCDATA)>
<!ELEMENT GENERIC (#PCDATA)>
<!ELEMENT GOTO (#PCDATA)>
<!ELEMENT IF (#PCDATA)>
<!ELEMENT IMPLEMENTS (#PCDATA)>
<!ELEMENT IMPORT (#PCDATA)>
<!ELEMENT INNER (#PCDATA)>
<!ELEMENT INSTANCEOF (#PCDATA)>
<!ELEMENT INT (#PCDATA)>
<!ELEMENT INTERFACE (#PCDATA)>
<!ELEMENT LONG (#PCDATA)>
<!ELEMENT NATIVE (#PCDATA)>
<!ELEMENT NEW (#PCDATA)>
<!ELEMENT JNULL (#PCDATA)>
<!ELEMENT OPERATOR (#PCDATA)>
<!ELEMENT OUTER (#PCDATA)>
<!ELEMENT PACKAGE (#PCDATA)>
<!ELEMENT PRIVATE (#PCDATA)>
<!ELEMENT PROTECTED (#PCDATA)>
<!ELEMENT PUBLIC (#PCDATA)>
<!ELEMENT REST (#PCDATA)>
<!ELEMENT RETURN (#PCDATA)>
<!ELEMENT SHORT (#PCDATA)>
<!ELEMENT STATIC (#PCDATA)>
<!ELEMENT SUPER (#PCDATA)>
<!ELEMENT SWITCH (#PCDATA)>
<!ELEMENT SYNCHRONIZED (#PCDATA)>
<!ELEMENT THIS (#PCDATA)>
<!ELEMENT THROW (#PCDATA)>
<!ELEMENT THROWS (#PCDATA)>
<!ELEMENT TRANSIENT (#PCDATA)>
<!ELEMENT TRY (#PCDATA)>
<!ELEMENT VAR (#PCDATA)>
<!ELEMENT VOID (#PCDATA)>
<!ELEMENT VOLATILE (#PCDATA)>
<!ELEMENT WHILE (#PCDATA)>
<!ELEMENT OP_INC (#PCDATA)>
<!ELEMENT OP_DEC (#PCDATA)>
<!ELEMENT OP_SHL (#PCDATA)>
<!ELEMENT OP_SHR (#PCDATA)>
<!ELEMENT OP_SHRR (#PCDATA)>
<!ELEMENT OP_GE (#PCDATA)>
<!ELEMENT OP_LE (#PCDATA)>
<!ELEMENT OP_EQ (#PCDATA)>
<!ELEMENT OP_NE (#PCDATA)>
<!ELEMENT OP_LAND (#PCDATA)>
<!ELEMENT OP_LOR (#PCDATA)>
<!ELEMENT OP_DIM (#PCDATA)>
<!ELEMENT ASS_MUL (#PCDATA)>
<!ELEMENT ASS_DIV (#PCDATA)>
<!ELEMENT ASS_MOD (#PCDATA)>
<!ELEMENT ASS_ADD (#PCDATA)>
<!ELEMENT ASS_SUB (#PCDATA)>
<!ELEMENT ASS_SHL (#PCDATA)>
<!ELEMENT ASS_SHR (#PCDATA)>
<!ELEMENT ASS_SHRR (#PCDATA)>
<!ELEMENT ASS_AND (#PCDATA)>
<!ELEMENT ASS_XOR (#PCDATA)>
<!ELEMENT ASS_OR (#PCDATA)>
<!ELEMENT IDENTIFIER (#PCDATA)>
<!ELEMENT LITERAL (#PCDATA)>
<!ELEMENT BOOLLIT (#PCDATA)>
<!ELEMENT CHAR44 (#PCDATA)>
<!ELEMENT CHAR59 (#PCDATA)>
<!ELEMENT CHAR46 (#PCDATA)>
<!ELEMENT CHAR42 (#PCDATA)>
<!ELEMENT CHAR123 (#PCDATA)>
<!ELEMENT CHAR125 (#PCDATA)>
<!ELEMENT CHAR61 (#PCDATA)>
<!ELEMENT CHAR40 (#PCDATA)>
<!ELEMENT CHAR41 (#PCDATA)>
<!ELEMENT CHAR58 (#PCDATA)>
<!ELEMENT CHAR91 (#PCDATA)>
<!ELEMENT CHAR93 (#PCDATA)>
<!ELEMENT CHAR126 (#PCDATA)>
<!ELEMENT CHAR33 (#PCDATA)>
<!ELEMENT CHAR43 (#PCDATA)>
<!ELEMENT CHAR45 (#PCDATA)>
<!ELEMENT CHAR47 (#PCDATA)>
<!ELEMENT CHAR37 (#PCDATA)>
<!ELEMENT CHAR60 (#PCDATA)>
<!ELEMENT CHAR62 (#PCDATA)>
<!ELEMENT CHAR38 (#PCDATA)>
<!ELEMENT CHAR94 (#PCDATA)>
<!ELEMENT CHAR124 (#PCDATA)>
<!ELEMENT CHAR63 (#PCDATA)>
