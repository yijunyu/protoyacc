<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="yaxx.xsl"?><!DOCTYPE CompilationUnit SYSTEM "javayaxx.dtd">
<yaxx:CompilationUnit xmlns:yaxx="urn:YAcc-Xml-eXtension">
<yaxx:ProgramFile>
<yaxx:TypeDeclarations>
<yaxx:TypeDeclarationOptSemi>
<yaxx:TypeDeclaration>
<yaxx:ClassHeader>
<yaxx:ClassWord>
<yaxx:CLASS>class</yaxx:CLASS>
</yaxx:ClassWord>
<yaxx:IDENTIFIER>HelloWorld</yaxx:IDENTIFIER>
</yaxx:ClassHeader>
<yaxx:CHAR123>{</yaxx:CHAR123>
<yaxx:FieldDeclarations>
<yaxx:FieldDeclarationOptSemi>
<yaxx:FieldDeclaration>
<yaxx:MethodDeclaration>
<yaxx:Modifiers>
<yaxx:Modifiers>
<yaxx:Modifier>
<yaxx:PUBLIC>public</yaxx:PUBLIC>
</yaxx:Modifier>
</yaxx:Modifiers>
<yaxx:Modifier>
<yaxx:STATIC>static</yaxx:STATIC>
</yaxx:Modifier>
</yaxx:Modifiers>
<yaxx:TypeSpecifier>
<yaxx:TypeName>
<yaxx:PrimitiveType>
<yaxx:VOID>void</yaxx:VOID>
</yaxx:PrimitiveType>
</yaxx:TypeName>
</yaxx:TypeSpecifier>
<yaxx:MethodDeclarator>
<yaxx:DeclaratorName>
<yaxx:IDENTIFIER>main</yaxx:IDENTIFIER>
</yaxx:DeclaratorName>
<yaxx:CHAR40>(</yaxx:CHAR40>
<yaxx:ParameterList>
<yaxx:Parameter>
<yaxx:TypeSpecifier>
<yaxx:TypeName>
<yaxx:QualifiedName>
<yaxx:IDENTIFIER>String</yaxx:IDENTIFIER>
</yaxx:QualifiedName>
</yaxx:TypeName>
</yaxx:TypeSpecifier>
<yaxx:DeclaratorName>
<yaxx:DeclaratorName>
<yaxx:IDENTIFIER>args</yaxx:IDENTIFIER>
</yaxx:DeclaratorName>
<yaxx:OP_DIM>[]</yaxx:OP_DIM>
</yaxx:DeclaratorName>
</yaxx:Parameter>
</yaxx:ParameterList>
<yaxx:CHAR41>)</yaxx:CHAR41>
</yaxx:MethodDeclarator>
<yaxx:MethodBody>
<yaxx:Block>
<yaxx:CHAR123>{</yaxx:CHAR123>
<yaxx:LocalVariableDeclarationsAndStatements>
<yaxx:LocalVariableDeclarationOrStatement>
<yaxx:Statement>
<yaxx:ExpressionStatement>
<yaxx:Expression>
<yaxx:AssignmentExpression>
<yaxx:ConditionalExpression>
<yaxx:ConditionalOrExpression>
<yaxx:ConditionalAndExpression>
<yaxx:InclusiveOrExpression>
<yaxx:ExclusiveOrExpression>
<yaxx:AndExpression>
<yaxx:EqualityExpression>
<yaxx:RelationalExpression>
<yaxx:ShiftExpression>
<yaxx:AdditiveExpression>
<yaxx:MultiplicativeExpression>
<yaxx:CastExpression>
<yaxx:UnaryExpression>
<yaxx:LogicalUnaryExpression>
<yaxx:PostfixExpression>
<yaxx:PrimaryExpression>
<yaxx:NotJustName>
<yaxx:ComplexPrimary>
<yaxx:ComplexPrimaryNoParenthesis>
<yaxx:MethodCall>
<yaxx:MethodAccess>
<yaxx:QualifiedName>
<yaxx:QualifiedName>
<yaxx:QualifiedName>
<yaxx:IDENTIFIER>System</yaxx:IDENTIFIER>
</yaxx:QualifiedName>
<yaxx:CHAR46>.</yaxx:CHAR46>
<yaxx:IDENTIFIER>out</yaxx:IDENTIFIER>
</yaxx:QualifiedName>
<yaxx:CHAR46>.</yaxx:CHAR46>
<yaxx:IDENTIFIER>println</yaxx:IDENTIFIER>
</yaxx:QualifiedName>
</yaxx:MethodAccess>
<yaxx:CHAR40>(</yaxx:CHAR40>
<yaxx:ArgumentList>
<yaxx:Expression>
<yaxx:AssignmentExpression>
<yaxx:ConditionalExpression>
<yaxx:ConditionalOrExpression>
<yaxx:ConditionalAndExpression>
<yaxx:InclusiveOrExpression>
<yaxx:ExclusiveOrExpression>
<yaxx:AndExpression>
<yaxx:EqualityExpression>
<yaxx:RelationalExpression>
<yaxx:ShiftExpression>
<yaxx:AdditiveExpression>
<yaxx:MultiplicativeExpression>
<yaxx:CastExpression>
<yaxx:UnaryExpression>
<yaxx:LogicalUnaryExpression>
<yaxx:PostfixExpression>
<yaxx:PrimaryExpression>
<yaxx:NotJustName>
<yaxx:ComplexPrimary>
<yaxx:ComplexPrimaryNoParenthesis>
<yaxx:LITERAL>&quot;Hello, world!&quot;</yaxx:LITERAL>
</yaxx:ComplexPrimaryNoParenthesis>
</yaxx:ComplexPrimary>
</yaxx:NotJustName>
</yaxx:PrimaryExpression>
</yaxx:PostfixExpression>
</yaxx:LogicalUnaryExpression>
</yaxx:UnaryExpression>
</yaxx:CastExpression>
</yaxx:MultiplicativeExpression>
</yaxx:AdditiveExpression>
</yaxx:ShiftExpression>
</yaxx:RelationalExpression>
</yaxx:EqualityExpression>
</yaxx:AndExpression>
</yaxx:ExclusiveOrExpression>
</yaxx:InclusiveOrExpression>
</yaxx:ConditionalAndExpression>
</yaxx:ConditionalOrExpression>
</yaxx:ConditionalExpression>
</yaxx:AssignmentExpression>
</yaxx:Expression>
</yaxx:ArgumentList>
<yaxx:CHAR41>)</yaxx:CHAR41>
</yaxx:MethodCall>
</yaxx:ComplexPrimaryNoParenthesis>
</yaxx:ComplexPrimary>
</yaxx:NotJustName>
</yaxx:PrimaryExpression>
</yaxx:PostfixExpression>
</yaxx:LogicalUnaryExpression>
</yaxx:UnaryExpression>
</yaxx:CastExpression>
</yaxx:MultiplicativeExpression>
</yaxx:AdditiveExpression>
</yaxx:ShiftExpression>
</yaxx:RelationalExpression>
</yaxx:EqualityExpression>
</yaxx:AndExpression>
</yaxx:ExclusiveOrExpression>
</yaxx:InclusiveOrExpression>
</yaxx:ConditionalAndExpression>
</yaxx:ConditionalOrExpression>
</yaxx:ConditionalExpression>
</yaxx:AssignmentExpression>
</yaxx:Expression>
</yaxx:ExpressionStatement>
<yaxx:CHAR59>;</yaxx:CHAR59>
</yaxx:Statement>
</yaxx:LocalVariableDeclarationOrStatement>
</yaxx:LocalVariableDeclarationsAndStatements>
<yaxx:CHAR125>}</yaxx:CHAR125>
</yaxx:Block>
</yaxx:MethodBody>
</yaxx:MethodDeclaration>
</yaxx:FieldDeclaration>
</yaxx:FieldDeclarationOptSemi>
</yaxx:FieldDeclarations>
<yaxx:CHAR125>}</yaxx:CHAR125>
</yaxx:TypeDeclaration>
</yaxx:TypeDeclarationOptSemi>
</yaxx:TypeDeclarations>
</yaxx:ProgramFile>
</yaxx:CompilationUnit>

